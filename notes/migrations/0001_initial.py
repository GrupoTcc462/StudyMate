# Generated by Django 5.2.6 on 2025-10-23 17:31

import django.db.models.deletion
import django.utils.timezone
import notes.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Título')),
                ('description', models.TextField(blank=True, max_length=800, verbose_name='Descrição')),
                ('file_type', models.CharField(choices=[('DOC', 'Documento Word'), ('PDF', 'PDF'), ('PPT', 'Apresentação'), ('LINK', 'Link Externo'), ('TXT', 'Texto')], max_length=10, verbose_name='Tipo')),
                ('file', models.FileField(blank=True, null=True, upload_to='notes_files/', validators=[notes.models.validate_file_size, notes.models.validate_file_extension], verbose_name='Arquivo')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Link')),
                ('subject', models.CharField(blank=True, max_length=60, null=True, verbose_name='Matéria')),
                ('is_recommended', models.BooleanField(default=False, verbose_name='Recomendado')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Criado em')),
                ('views', models.PositiveIntegerField(db_index=True, default=0, verbose_name='Visualizações')),
                ('likes', models.PositiveIntegerField(db_index=True, default=0, verbose_name='Curtidas')),
                ('downloads', models.PositiveIntegerField(db_index=True, default=0, verbose_name='Downloads')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['-is_recommended', '-likes', '-views', '-downloads', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=400, verbose_name='Comentário')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='notes.note', verbose_name='Note')),
            ],
            options={
                'verbose_name': 'Comentário',
                'verbose_name_plural': 'Comentários',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='NoteLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Curtido em')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='note_likes', to='notes.note', verbose_name='Note')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
            },
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['-likes', '-views'], name='notes_note_likes_674254_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['subject'], name='notes_note_subject_435eb9_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['-created_at'], name='notes_note_created_cf5022_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notelike',
            unique_together={('note', 'user')},
        ),
    ]
